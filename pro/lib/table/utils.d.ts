import { Key, ReactElement, ReactNode } from 'react';
import { ColumnProps } from './Column';
import Record from '../data-set/Record';
import Field from '../data-set/Field';
import { ColumnAlign, ColumnLock, TablePaginationPosition } from './enum';
import { FormFieldProps } from '../field/FormField';
import DataSet from '../data-set/DataSet';
import TableStore from './TableStore';
import { TablePaginationConfig } from './Table';
export declare function getEditorByField(field: Field): ReactElement<FormFieldProps>;
export declare function getAlignByField(field?: Field): ColumnAlign | undefined;
export declare function getEditorByColumnAndRecord(column: ColumnProps, record?: Record): ReactElement<FormFieldProps> | undefined;
export declare function isRadio(element?: ReactElement<FormFieldProps>): boolean;
export declare function findCell(tableStore: TableStore, prefixCls?: string, name?: Key, lock?: ColumnLock | boolean): HTMLTableCellElement | undefined;
export declare function findFirstFocusableElement(node?: HTMLElement): HTMLElement | undefined;
export declare function findIndexedSibling(element: any, direction: any): HTMLTableRowElement | null;
export declare function isDisabledRow(record: Record): boolean;
export declare function getHeader(column: ColumnProps, dataSet: DataSet): ReactNode;
export declare function getColumnKey({ name, key }: ColumnProps): Key;
export declare function getPaginationPosition(pagination?: TablePaginationConfig): TablePaginationPosition;
export declare function getHeight(el: HTMLElement): number;
